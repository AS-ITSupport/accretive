<?php
// $Id: purr_messages.module,v 1.1 2009/02/13 10:57:40 tanc Exp $

/**
 * @file
 * Purr Messages
 * A jQuery based override of Drupal's core message system
 */

/**
 * Implementation of hook_perm().
 */
function purr_messages_perm() {
  return array('view purr messages', 'administer purr messages');
}

/**
 * Implementation of hook_menu().
 */

function purr_messages_menu() {
  $items = array();
  $items['admin/settings/purr'] = array(
    'title' => t('Purr Messages'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('purr_messages_settings'),
    'access callback' => 'user_access',
    'access arguments' => array('administer purr messages'),
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}

/**
 * Implementation of hook_help().
 * Display some help to ensure the jquery files are downloaded into the right place
 */

function purr_messages_help($path, $arg) {
  switch ($path) {
    case 'admin/settings/purr':
      if (purr_messages_existence_status() == FALSE) {
        return t('<strong>jQuery file status:</strong> You need to download the Purr jquery file from <a href="http://jquery-purr.googlecode.com/files/jquery-purr0-1-0.zip">http://jquery-purr.googlecode.com/files/jquery-purr0-1-0.zip</a>.<br/>Decompress it and put just the jquery.purr.js file inside the purr_messages module folder:<br/>%path', array('%path' => drupal_get_path('module', 'purr_messages')));
      }
      else {
        return t('<strong>jQuery file status:</strong> The jquery file is in place.');
      }
  }
}


/**
 * Implementation of hook_settings().
 * Configuration settings page.
 */

function purr_messages_settings() {
    $module_path = drupal_get_path('module', 'purr_messages');
    $form['purr_messages_code_status'] = array(
    '#type' => 'fieldset',
    '#title' => t('Purr Messages settings'),
    '#weight' => -10,
    '#description' => (purr_messages_status() !== FALSE) ? t('You have a custom css file in: <br/>/%path/purrcss/') : t('You are using the default purr style. To use custom css and images simply copy the <em>\'purrcss\'</em> folder from: <br/>%modulepath<br/> and place it in your theme folder: <br/>%path<br/>Then make the alterations you want to the copied version in your theme folder. This module will automatically pick up the changes and this message will change if you\'ve done it correctly.<br/>', array('%path' => path_to_theme(), '%modulepath' => $module_path))
    );
    $form['purr_messages_code_status']['purr_messages_code'] = array(
      '#type' => 'textarea',
      '#title' => t('The settings code'),
      '#rows' => 10,
      '#weight' => -10,
      '#default_value' => variable_get('purr_messages_code', "$(notice).purr(\n  {\n    fadeInSpeed:1200,\n    fadeOutSpeed:2000,\n    removeTimer:5000,\n    usingTransparentPNG:true\n  }  \n);"),
      '#description' => t('Add the purr messages code here. Example code is already provided, simply adjust the values to suit. More information can be found here: <a href="http://kitchen.net-perspective.com/open-source/purr">http://kitchen.net-perspective.com/open-source/purr</a>'),
    );

  return system_settings_form($form);
}

/**
 * Implementation of hook_theme_registry_alter().
 * Allows the module to override the core status_messages function with purr_messages_status_messages.
 */

function purr_messages_theme_registry_alter(&$theme_registry) {
  if ((user_access('view purr messages')) && (variable_get('purr_enabled', TRUE) == TRUE)) {
    if (!empty($theme_registry['status_messages'])) {
      $theme_registry['status_messages']['function'] = 'purr_messages_status_messages';
    }
  }
}

/**
 * Build the message status html inside a jquery object.
 *
 * Adds jQuery and purr code around the object and then
 * returns it back to the theme layer ($messages).
 */

function purr_messages_status_messages($display = NULL) {
  $module_path = drupal_get_path('module', 'purr_messages');
  drupal_add_js($module_path .'/jquery.purr.js');
  $custom_css = purr_messages_status($themelayer = TRUE);
  if ($custom_css == FALSE) {
    drupal_add_css($module_path .'/purrcss/purr.css');
  }
    else {
    drupal_add_css($custom_css);
  }
  $output = '';
  foreach (drupal_get_messages($display) as $type => $messages) {

    // This is the javascript which will be printed instead of the old message content
    $output .= "<script type=\"text/javascript\">";
    $output .= "$(document).ready(function() {\n var notice = ";
    $output .= "'<div class=\"notice $type\">'\n + '<div class=\"notice-body\">'";
    if (count($messages) > 1) {
      $output .= "+ '<ul>'\n";
      foreach ($messages as $message) {
        $output .= "+  '<li>". $message ."</li>'\n";
      }
      $output .= "+ '</ul>'\n";
    }
    else {
      $output .= "\n+ '". $messages[0] ."'\n";
    }
    $output .= "+ '</div>'\n + '<div class=\"notice-bottom\">'\n + '</div>' + '</div>'\n";
    // gets the settings if they've been set, otherwise use some defaults
    $output .= variable_get('purr_messages_code', "$(notice).purr(\n  {\n    fadeInSpeed:1200,    fadeOutSpeed:2000,    removeTimer:5000,\n    usingTransparentPNG:true\n  }  \n);");
    // finish off the script
    $output .= "});</script>\n";

    // Next we add the old style output if javascript is turned off
    $output .= "<noscript>\n";
    $output .= "<div class=\"messages $type\">\n";
    if (count($messages) > 1) {
      $output .= " <ul>\n";
      foreach ($messages as $message) {
        $output .= '  <li>'. $message ."</li>\n";
      }
      $output .= " </ul>\n";
    }
    else {
      $output .= $messages[0];
    }
    $output .= "</div></noscript>\n";
  }
  return $output;
}

/**
 * Check to see whether the custom files exist.
 *
 * Makes a check to the current theme's folder to see whether the
 * purrcss folder and purr.css file exists. Also returns the correct path
 * depending on where the function has been called from.
 */

function purr_messages_status($themelayer = FALSE) {
  if ($themelayer == TRUE) {
    // called from theme function so path_to_theme returns incorrect result
    global $theme;
    $custom_css = drupal_get_path('theme', $theme) .'/purrcss/purr.css';
  }
    else {
    // called from non theme function (admin)
    $custom_css = path_to_theme() .'/purrcss/purr.css';
  }
  if (!is_file($custom_css)) {
    return FALSE;
  }
  return $custom_css;
}

/**
 * Check to see whether the jquery files exists.
 *
 * Makes a check to the module's folder to see whether the
 * jquery.purr.js file exists.
 */

function purr_messages_existence_status() {
  $jqueryfile = drupal_get_path('module', 'purr_messages') .'/jquery.purr.js';
  if (is_file($jqueryfile)) {
    return TRUE;
  }
    else {
    return FALSE;
  }
}